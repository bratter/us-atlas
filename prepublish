#!/bin/bash

rm -rvf *-10m.json
rm -rvf state-metadata.json
mkdir -p build

node metadata/make-state-metadata.js

if [ ! -f build/cb_2019_us_county_5m.shp ]; then
  curl -o build/cb_2019_us_county_5m.zip 'https://www2.census.gov/geo/tiger/GENZ2019/shp/cb_2019_us_county_5m.zip'
  unzip -od build build/cb_2019_us_county_5m.zip cb_2019_us_county_5m.shp cb_2019_us_county_5m.dbf
  chmod a-x build/cb_2019_us_county_5m.*
fi

if [ ! -f build/cb_2019_us_state_5m.shp ]; then
  curl -o build/cb_2019_us_state_5m.zip 'https://www2.census.gov/geo/tiger/GENZ2019/shp/cb_2019_us_state_5m.zip'
  unzip -od build build/cb_2019_us_state_5m.zip cb_2019_us_state_5m.shp cb_2019_us_state_5m.dbf
  chmod a-x build/cb_2019_us_state_5m.*
fi

if [ ! -f build/cb_2019_us_nation_5m.shp ]; then
  curl -o build/cb_2019_us_nation_5m.zip 'https://www2.census.gov/geo/tiger/GENZ2019/shp/cb_2019_us_nation_5m.zip'
  unzip -od build build/cb_2019_us_nation_5m.zip cb_2019_us_nation_5m.shp cb_2019_us_nation_5m.dbf
  chmod a-x build/cb_2019_us_nation_5m.*
fi

# Due to windows input redirection issue, rewriting the pipeline to have one intermediate file
# Additionally, windows compatibility issues require rewriting the RegExp with a constructor to avoid conversion to filepath
TMP_FILE='build/tmp.json'
FILTER='!new RegExp("000$").test(d.properties.GEOID)'
PROJECTION="d3ts.usMapProjection((['02', '15', '72', '78', '66', '69', '60']))"
REQUIRE='d3ts=@d3ts/us-map'

# Counties
shp2json -n build/cb_2019_us_county_5m.shp \
  | ndjson-filter "$FILTER" \
  | ndjson-map '(d.id = d.properties.GEOID, delete d.properties, d)' \
  > $TMP_FILE

geo2topo -q 1e5 -n counties=$TMP_FILE \
  | toposimplify -f -s 1e-7 \
  | topomerge states=counties -k 'd.id.slice(0, 2)' \
  | topomerge nation=states \
  | node ./properties-counties.js \
  > counties-10m.json

shp2json -n build/cb_2019_us_county_5m.shp \
  | ndjson-filter "$FILTER" \
  | ndjson-map '(d.id = d.properties.GEOID, delete d.properties, d)' \
  | geoproject -n "$PROJECTION" -r $REQUIRE \
  > $TMP_FILE

geo2topo -q 1e5 -n counties=$TMP_FILE \
  | toposimplify -f -p 0.25 \
  | topomerge states=counties -k 'd.id.slice(0, 2)' \
  | topomerge nation=states \
  | node ./properties-counties.js \
  > counties-albers-10m.json

# States
shp2json -n build/cb_2019_us_state_5m.shp \
  | ndjson-filter "$FILTER" \
  | ndjson-map '(d.id = d.properties.GEOID, d.properties = {name: d.properties.NAME}, d)' \
  > $TMP_FILE

geo2topo -q 1e5 -n states=$TMP_FILE \
  | toposimplify -f -s 1e-7 \
  | topomerge nation=states \
  | node ./properties-states.js \
  > states-10m.json

shp2json -n build/cb_2019_us_state_5m.shp \
  | ndjson-filter "$FILTER" \
  | ndjson-map '(d.id = d.properties.GEOID, d.properties = {name: d.properties.NAME}, d)' \
  | geoproject -n "$PROJECTION" -r $REQUIRE \
  > $TMP_FILE

geo2topo -q 1e5 -n states=$TMP_FILE \
  | toposimplify -f -p 0.25 \
  | topomerge nation=states \
  | node ./properties-states.js \
  > states-albers-10m.json

# Nation
shp2json -n build/cb_2019_us_nation_5m.shp \
  | ndjson-filter "$FILTER" \
  | ndjson-map '(d.id = d.properties.GEOID, d.properties = {name: d.properties.NAME}, d)' \
  > $TMP_FILE

geo2topo -q 1e5 -n nation=$TMP_FILE \
  | toposimplify -f -s 1e-7 \
  > nation-10m.json

shp2json -n build/cb_2019_us_nation_5m.shp \
  | ndjson-filter "$FILTER" \
  | ndjson-map '(d.id = d.properties.GEOID, d.properties = {name: d.properties.NAME}, d)' \
  | geoproject -n "$PROJECTION" -r $REQUIRE \
  > $TMP_FILE

geo2topo -q 1e5 -n nation=$TMP_FILE \
  | toposimplify -f -p 0.25 \
  > nation-albers-10m.json

# Inset outlines (projected only)
node ./make-inset-outlines.js > outlines-albers-10m.json

# Clean the created temporary file
rm -rvf $TMP_FILE
